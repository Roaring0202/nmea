name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '00 01 * * *'

# Stops the running workflow of previous pushes
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: 1
jobs:
  lints:
    name: Rustfmt & Clippy lints

    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    env:
      RUSTUP_MAX_RETRIES: 10
      CARGO_NET_RETRY: 10
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: default
          override: true
          components: rustfmt, clippy

      - name: Rust format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check

      - name: Clippy lints
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --no-deps -- -D warnings
  test:
    name: Test

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [1.56, stable, beta]
    env:
      RUSTUP_MAX_RETRIES: 10
      CARGO_NET_RETRY: 10
    steps:
      - uses: actions/checkout@v3

      # We need to disable the existing toolchain to avoid updating rust-docs
      # which takes a long time. The fastest way to do this is to rename the
      # existing folder, as deleting it takes about as much time as not doing
      # anything and just updating rust-docs.
      - name: Rename existing rust toolchain (Windows)
        if: matrix.os == 'windows-latest'
        run: Rename-Item C:\Users\runneradmin\.rustup\toolchains\stable-x86_64-pc-windows-msvc C:\Users\runneradmin\.rustup\toolchains\stable-x86_64-pc-windows-msvc.old

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          components: rust-src

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: Test --no-default-features
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-default-features

      - name: Test --all-features
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

      - name: Test (Release)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --no-default-features
      
      - name: Test (Release) all-features
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --all-features

  # Detect cases where documentation links don't resolve and such.
  doc:
    name: Docs check
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          # Docs.rs uses nightly, which allows for easier syntax for linking to functions.
          toolchain: nightly
          override: true

      - name: Docs --all-features
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all-features --no-deps

      - name: Docs --no-default-features
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-default-features --no-deps

  # codecov:
  #   name: Generate code coverage
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         override: true

  #     - name: Run cargo-tarpaulin
  #       uses: actions-rs/tarpaulin@v0.1

  #     - name: Upload to codecov.io
  #       uses: codecov/codecov-action@v1
